vim9script

# Load defaults
runtime defaults.vim

# Terminal codes {{{

# https://wezfurlong.org/wezterm/escape-sequences.html
# https://sw.kovidgoyal.net/kitty/underlines/
# https://invisible-island.net/xterm/ctlseqs/ctlseqs.txt

# Underlines
set t_AU=[58;5;%dm
set t_Ce=[24m
set t_Cs=[4:3m
set t_Us=[4:2m
set t_ds=[4:4m
set t_Ds=[4:5m

# Truecolors
set t_8f=[38;2;%lu;%lu;%lum
set t_8b=[48;2;%lu;%lu;%lum
set t_8u=[58;2;%lu;%lu;%lum

# Cursor shape
set t_SI=[6\ q
set t_SR=[4\ q
set t_EI=[2\ q

# }}}
# Global {{{

set hidden
set splitright
set splitbelow
set fillchars=vert:â”‚
set nostartofline
set lazyredraw
set scrolloff=2
set nojoinspaces
set completeopt=menuone,noselect,noinsert,popuphidden

g:mapleader = " "
nnoremap Y y$

# Save session and quit
command Q mksession! | qall

# }}}
# Window {{{

set nowrap
set linebreak
set number
set signcolumn=number
set listchars=eol:$,tab:Â»-,space:Â·

nnoremap <silent> <C-W>] <Cmd>vert wincmd ]<CR>
nnoremap <silent> <C-W><C-]> <Cmd>vert wincmd ]<CR>
nnoremap <silent> <Leader>q <Cmd>copen<CR>
nnoremap <silent> <Leader>l <Cmd>lopen<CR>
nnoremap <silent> <C-W>z <Cmd>wincmd z<bar>cclose<bar>lclose<CR>
nnoremap <silent> <C-W>Q <Cmd>tabclose<CR>

# }}}
# Buffer {{{

set tabstop=4
set softtabstop=4
set shiftwidth=4
set smarttab
set noexpandtab

# Make the current buffer a scratch buffer
command Scratch set buftype=nofile | set bufhidden=hide | set noswapfile

# }}}
# Search {{{

set ignorecase
set smartcase
set nohlsearch
set incsearch
set grepprg=rg\ --vimgrep

# }}}
# Plugins {{{

# vim-plug bootstrapping
if empty(glob("~/.vim/autoload/plug.vim"))
	!curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
endif

plug#begin()

# General {{{

Plug "tpope/vim-commentary"
Plug "tpope/vim-surround"
Plug "tpope/vim-fugitive"
Plug "tpope/vim-repeat"
Plug "tpope/vim-unimpaired"
Plug "tpope/vim-abolish"

# }}}
# Gruvbox {{{

Plug "gruvbox-community/gruvbox"

# }}}
# Lightline {{{

Plug "itchyny/lightline.vim"

set laststatus=2
g:lightline = {
	"colorscheme": "gruvbox",
	"active": {
		"left": [
			["mode", "paste"],
			["filename"],
			["readonly", "modified"],
		],
		"right": [
			["lineinfo"],
			["filetype"],
			["lsp_warnings", "lsp_errors", "lsp_ok"],
		],
	},
	"inactive": {
		"left": [["filename", "modified"]],
		"right": [["lineinfo"]],
	},
	"tabline": {
		"left": [["tabs"]],
		"right": [["close"]]
	},
	"component_expand": {
		"lsp_warnings": "lightline_lsp#Warnings",
		"lsp_errors": "lightline_lsp#Errors",
		"lsp_ok": "lightline_lsp#OK"
	},
	"component_type": {
		"lsp_warnings": "warning",
		"lsp_errors": "error",
		"lsp_ok": "middle",
	}
}

# }}}
# Clipboard {{{

Plug "ojroques/vim-oscyank"
autocmd! TextYankPost * if v:event.operator == "y" && v:event.regname == "" | execute 'OSCYankRegister "' | endif

# }}}
# FZF {{{

Plug "junegunn/fzf"
Plug "junegunn/fzf.vim"
g:fzf_preview_window = []  # Disable preview
nnoremap <Leader>f <Cmd>Files<CR>
nnoremap <Leader>F <Cmd>GFiles --exclude-standard -cmo<CR>
nnoremap <Leader>b <Cmd>Buffers<CR>
nnoremap <Leader>/ <Cmd>execute "Rg " . input("Rg /")<CR>

# }}}
# Fern {{{

Plug "lambdalisue/fern.vim", {'branch': 'main'}
Plug "lambdalisue/fern-hijack.vim"
Plug "lambdalisue/nerdfont.vim"
Plug "lambdalisue/fern-renderer-nerdfont.vim"
g:fern#hide_cursor = 1
g:fern#renderer = "nerdfont"
nnoremap <leader>x <Cmd>Fern . -drawer -toggle<CR>
nnoremap <leader>X <Cmd>Fern . -drawer -reveal=%<CR>


def InitFern()
	set nonumber norelativenumber
	nnoremap <buffer> <C-V> <Plug>(fern-action-open:vsplit)
	nnoremap <buffer> <C-X> <Plug>(fern-action-open:split)
	nnoremap <buffer> <C-T> <Plug>(fern-action-open:tabedit)
enddef
autocmd! FileType fern InitFern()

# }}}
# Zepl {{{

Plug "axvr/zepl.vim"
g:repl_config = {
	"python": {
		"cmd": "python",
		"formatter": function("zepl#contrib#python#formatter")
	}
}
autocmd! User ZeplTerminalWinOpen set nonumber norelativenumber | wincmd J | set winfixheight | resize 15

# }}}
# Filetype specific {{{

Plug "mattn/emmet-vim"
g:user_emmet_install_global = 0
autocmd! FileType html,css EmmetInstall

Plug "hashivim/vim-terraform"

Plug "chrisbra/csv.vim"
g:csv_bind_B = 1

Plug "goerz/jupytext.vim"

# }}}
# Vsnip {{{

Plug "hrsh7th/vim-vsnip"
Plug "hrsh7th/vim-vsnip-integ"
Plug "rafamadriz/friendly-snippets"

# Jump back and forth
imap <expr> <Tab> vsnip#available(1)  ? '<Plug>(vsnip-expand-or-jump)' : '<Tab>'
smap <expr> <Tab> vsnip#available(1)  ? '<Plug>(vsnip-expand-or-jump)' : '<Tab>'
imap <expr> <S-Tab> vsnip#jumpable(-1)  ? '<Plug>(vsnip-jump-prev)' : '<S-Tab>'
smap <expr> <S-Tab> vsnip#jumpable(-1)  ? '<Plug>(vsnip-jump-prev)' : '<S-Tab>'

# Fill $TM_SELECTED_TEXT
xmap s <Plug>(vsnip-cut-text)

# }}}
# LSP {{{

Plug "yegappan/lsp"
Plug "ilango100/lightline-lsp"

var lspOptions = {
	"autoComplete": true,
	"highlightDiagInline": true,
	"showInlayHints": true,
	"showSignature": false,
	"snippetSupport": true,
	"usePopupInCodeAction": true,
}

def LSPInit()
	nnoremap <buffer> gy <Cmd>LspGotoTypeDef<CR>
	nnoremap <buffer> gY <Cmd>LspPeekTypeDef<CR>
	nnoremap <buffer> gd <Cmd>LspGotoDeclaration<CR>
	nnoremap <buffer> gD <Cmd>LspGotoDeclaration<CR>
	setlocal tagfunc=lsp#lsp#TagFunc
	nnoremap <buffer> g] <Cmd>LspPeekDefinition<CR>
	nnoremap <buffer> gi <Cmd>LspGotoImpl<CR>
	nnoremap <buffer> gI <Cmd>LspPeekImpl<CR>
	nnoremap <buffer> gr <Cmd>LspShowReferences<CR>
	nnoremap <buffer> gR <Cmd>LspPeekReferences<CR>
	nnoremap <buffer> K <Cmd>LspHover<CR>
	nnoremap <buffer> gs <Cmd>LspOutline<CR>
	nnoremap <buffer> gS <Cmd>LspSymbolSearch<CR>
	nnoremap <buffer> <C-K> <Cmd>LspShowSignature<CR>
	inoremap <buffer> <C-K> <Cmd>LspShowSignature<CR>
	nnoremap <buffer> <leader>r <Cmd>LspRename<CR>
	nnoremap <buffer> <leader>a <Cmd>LspCodeAction<CR>
	nnoremap <buffer> <leader>d <Cmd>LspDiagShow<CR>
	nnoremap <buffer> gqQ <Cmd>LspFormat<CR>
	setlocal formatexpr=lsp#lsp#FormatExpr()
	setlocal omnifunc=LspOmniFunc
enddef

import "./lsp_servers.vim"

augroup lsp
	autocmd!
	autocmd VimEnter * {
		call LspOptionsSet(lspOptions)
		call LspAddServer(lsp_servers.lspServers)
		highlight link LspDiagLine NONE
	}
	autocmd User LspAttached LSPInit()
augroup END

# }}}

plug#end()

# }}}
# Colorscheme {{{

set termguicolors
set background=dark
g:gruvbox_italic = 1
colorscheme gruvbox

# }}}
# Cmdline {{{

set showcmd
set noshowmode
set shortmess=aOTIc
set wildmenu
set wildoptions=fuzzy,pum,tagfile
set wildignorecase

# }}}
# Terminal {{{

command -nargs=* T new | wincmd J | set winfixheight | resize 15 | terminal ++curwin ++close <args>
tnoremap <C-W><Esc> <C-W>N
autocmd! TerminalWinOpen * set nonumber norelativenumber

# Zepl
runtime zepl/contrib/python.vim

# }}}

runtime vimrc.local

# vim: foldmethod=marker
